# inspired by https://github.com/extrawurst/gitui/blob/master/.github/workflows/cd.yml
# references
#  - https://github.com/marketplace/actions/upload-files-to-a-github-release
#  - https://github.com/marketplace/actions/upload-a-release-asset

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            binary_crate: stegano-cli
            artifact_name: stegano.tar.gz
            asset_name: stegano-$tag-linux-amd64.tar.gz
          - os: windows-latest
            binary_crate: stegano-cli
            artifact_name: stegano.tar.gz
            asset_name: stegano-$tag-windows-amd64.tar.gz
          - os: macos-latest
            binary_crate: stegano-cli
            artifact_name: stegano.tar.gz
            asset_name: stegano-$tag-macos-amd64.tar.gz
    steps:
      - uses: actions/checkout@v2
## for local execution needed
#      - name: Install Build Essentials
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          apt-get update
#          apt-get -y -qq install clang
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Build
        run: cargo build --release --locked
      - name: Package
        run: |
          mkdir -p release/bin
          cp ${{ matrix.binary_crate }}/README.md ${{ matrix.binary_crate }}/LICENSE release/bin
          cargo install --path ${{ matrix.binary_crate }} --root release
          tar -C release/bin -cvzf ${{ matrix.artifact_name }} .
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true

# TODO: refactor that with using target variables defined on the matrix
#      - name: Prepare Cargo Target
#        if: matrix.os == 'windows-latest'
#        run: rustup target add $TARGET
#      - name: Prepare MUSL tooling
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          sudo apt-get -qq install musl-tools
#          rustup target add x86_64-unknown-linux-musl
#        run: rustup target add x86_64-pc-windows-gnu
